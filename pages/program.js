import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import InstrumentContainer from '../components/InstrumentContainer'
import { useContext, useEffect, useState } from 'react'
import MeasuresContainer from '../components/MeasuresContainer'
import {InstrumentsContext, InstrumentsContextProvider} from '../hooks/InstrumentContext'

export default function Home() {
  const [togglePlayer, setTogglePlayer] = useState(true);
  const [gesture, setGesture] = useState(false);
  const  {start, stop} = useContext(InstrumentsContext)
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="main_app_container">
          {
            !gesture ? 
            <div className="initialize-audio-overlay">
              
              <div class="intro-text"><h2 style={{textAlign: "center"}}>
              SweetBeats is a music looping application designed for beginners<br></br>
              as well as people experienced in music production. Sweetbeats allows you  <br></br>
              to add or remove tracks from either or both of two measures which loop <br></br>
              into each other. You can also hover over an instrumentent track to hear <br></br>
              a preview of how it will sound in the mix. Click start to begin playing the loop.


              </h2>
            <button className="initialize-audio-button" onClick={() => {
              setGesture(true);
            }}>Click Here to Initialize Audio Context!</button>
            </div>
          </div> : <></>}
          <MeasuresContainer/>
          <div className="instruments">
            <div className="instrument-types-label">
              Instrument Types
              <button onClick={() => {
                if (togglePlayer) {
                  start();
                } else {
                  stop();
                }
                setTogglePlayer(!togglePlayer);
              }}>Start</button>
            </div>
            <div className="instruments-container">
              <InstrumentContainer instrument_amount={4} name="snare" color="#455192" instrument_ident="snare"/>
              <InstrumentContainer instrument_amount={4} name="kick" color="#455192" instrument_ident="kick"/>
              <InstrumentContainer instrument_amount={4} name="cymbal" color="#455192" instrument_ident="cymbal"/>
              <InstrumentContainer instrument_amount={4} name="bass" color="#779F68" instrument_ident="bass"/>
              <InstrumentContainer instrument_amount={4} name="melody" color="#B95264" instrument_ident="melody"/>
              <InstrumentContainer instrument_amount={4} name="auxiliary" color="#D2C761" instrument_ident="auxiliary"/>
            </div>
          </div>
        </div>
      </main>
    </>
  )
}
